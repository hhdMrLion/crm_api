# Generated by Django 3.2.4 on 2021-07-30 09:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('customer', '0003_alter_customer_is_deal'),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_valid', models.BooleanField(default=True, verbose_name='是否有效')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('problem', models.TextField(max_length=1000, verbose_name='故障现象')),
                ('other', models.TextField(blank=True, max_length=1000, null=True, verbose_name='其它事宜')),
                ('result', models.TextField(blank=True, max_length=1000, null=True, verbose_name='维修结果')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service', to='customer.customer', verbose_name='客户名称')),
                ('ser_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service', to=settings.AUTH_USER_MODEL, verbose_name='维修人员')),
            ],
            options={
                'verbose_name': '维修支持表',
                'verbose_name_plural': '维修支持表',
                'db_table': 'service',
            },
        ),
        migrations.CreateModel(
            name='ServiceProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=10, verbose_name='日期')),
                ('process', models.TextField(max_length=1000, verbose_name='详情')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='serviceprocess', to='backend.service', verbose_name='维修支持记录')),
            ],
            options={
                'verbose_name': '维修过程表',
                'verbose_name_plural': '维修过程表',
                'db_table': 'service_process',
            },
        ),
        migrations.CreateModel(
            name='PreSupport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_valid', models.BooleanField(default=True, verbose_name='是否有效')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('preplan', models.CharField(max_length=256, verbose_name='售前方案')),
                ('product', models.CharField(max_length=128, verbose_name='产品名称')),
                ('cycle', models.CharField(max_length=128, verbose_name='周期')),
                ('des', models.TextField(blank=True, max_length=1000, null=True, verbose_name='详情')),
                ('date', models.CharField(blank=True, max_length=16, null=True, verbose_name='服务日期')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presupport', to='customer.customer', verbose_name='客户名称')),
                ('pre_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presupport', to=settings.AUTH_USER_MODEL, verbose_name='售前人员')),
            ],
            options={
                'verbose_name': '售前支持表',
                'verbose_name_plural': '售前支持表',
                'db_table': 'presupport',
            },
        ),
        migrations.CreateModel(
            name='Implement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_valid', models.BooleanField(default=True, verbose_name='是否有效')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('testplan', models.CharField(max_length=256, verbose_name='测试方案')),
                ('plan', models.CharField(max_length=128, verbose_name='测试方案')),
                ('report', models.CharField(max_length=128, verbose_name='测试报告')),
                ('date', models.CharField(blank=True, max_length=16, null=True, verbose_name='实施日期')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='implement', to='customer.customer', verbose_name='客户名称')),
                ('imp_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='implement', to=settings.AUTH_USER_MODEL, verbose_name='实施人员')),
            ],
            options={
                'verbose_name': '实施支持表',
                'verbose_name_plural': '实施支持表',
                'db_table': 'implement',
            },
        ),
        migrations.CreateModel(
            name='AfterSupport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_valid', models.BooleanField(default=True, verbose_name='是否有效')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('aftersupport', models.CharField(max_length=500, verbose_name='售后支持')),
                ('status', models.SmallIntegerField(choices=[(1, '电话支持'), (2, '现场支持')], default=1, verbose_name='服务方式')),
                ('des', models.TextField(blank=True, max_length=1000, null=True, verbose_name='详情')),
                ('date', models.CharField(blank=True, max_length=16, null=True, verbose_name='服务日期')),
                ('after_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aftersupport', to=settings.AUTH_USER_MODEL, verbose_name='售后人员')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aftersupport', to='customer.customer', verbose_name='客户名称')),
            ],
            options={
                'verbose_name': '售后支持表',
                'verbose_name_plural': '售后支持表',
                'db_table': 'aftersupport',
            },
        ),
    ]
